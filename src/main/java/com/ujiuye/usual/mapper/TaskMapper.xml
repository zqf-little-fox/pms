<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ujiuye.usual.mapper.TaskMapper" >
  <resultMap id="BaseResultMap" type="com.ujiuye.usual.bean.Task" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="starttime" property="starttime" jdbcType="DATE" />
    <result column="endtime" property="endtime" jdbcType="DATE" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="fun_fk" property="funFk" jdbcType="INTEGER" />
    <result column="emp_fk2" property="empFk2" jdbcType="INTEGER" />
    <result column="emp_fk" property="empFk" jdbcType="INTEGER" />
    <result column="tasktitle" property="tasktitle" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <association property="function" select="com.ujiuye.pro.mapper.FunctionMapper.getFunctionById" column="fun_fk"></association>
    <association property="employee" select="com.ujiuye.sys.mapper.EmployeeMapper.getEmployeeByEid" column="emp_fk"></association>
    <association property="employee1" select="com.ujiuye.sys.mapper.EmployeeMapper.getEmployeeByEid" column="emp_fk2"></association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, starttime, endtime, level, remark, fun_fk, emp_fk2, emp_fk, tasktitle, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ujiuye.usual.bean.TaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ujiuye.usual.bean.TaskExample" >
    delete from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ujiuye.usual.bean.Task" >
    insert into task (id, starttime, endtime, 
      level, remark, fun_fk, 
      emp_fk2, emp_fk, tasktitle, 
      status)
    values (#{id,jdbcType=INTEGER}, #{starttime,jdbcType=DATE}, #{endtime,jdbcType=DATE}, 
      #{level,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{funFk,jdbcType=INTEGER}, 
      #{empFk2,jdbcType=INTEGER}, #{empFk,jdbcType=INTEGER}, #{tasktitle,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ujiuye.usual.bean.Task" >
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="funFk != null" >
        fun_fk,
      </if>
      <if test="empFk2 != null" >
        emp_fk2,
      </if>
      <if test="empFk != null" >
        emp_fk,
      </if>
      <if test="tasktitle != null" >
        tasktitle,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=DATE},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="funFk != null" >
        #{funFk,jdbcType=INTEGER},
      </if>
      <if test="empFk2 != null" >
        #{empFk2,jdbcType=INTEGER},
      </if>
      <if test="empFk != null" >
        #{empFk,jdbcType=INTEGER},
      </if>
      <if test="tasktitle != null" >
        #{tasktitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ujiuye.usual.bean.TaskExample" resultType="java.lang.Integer" >
    select count(*) from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null" >
        starttime = #{record.starttime,jdbcType=DATE},
      </if>
      <if test="record.endtime != null" >
        endtime = #{record.endtime,jdbcType=DATE},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.funFk != null" >
        fun_fk = #{record.funFk,jdbcType=INTEGER},
      </if>
      <if test="record.empFk2 != null" >
        emp_fk2 = #{record.empFk2,jdbcType=INTEGER},
      </if>
      <if test="record.empFk != null" >
        emp_fk = #{record.empFk,jdbcType=INTEGER},
      </if>
      <if test="record.tasktitle != null" >
        tasktitle = #{record.tasktitle,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update task
    set id = #{record.id,jdbcType=INTEGER},
      starttime = #{record.starttime,jdbcType=DATE},
      endtime = #{record.endtime,jdbcType=DATE},
      level = #{record.level,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      fun_fk = #{record.funFk,jdbcType=INTEGER},
      emp_fk2 = #{record.empFk2,jdbcType=INTEGER},
      emp_fk = #{record.empFk,jdbcType=INTEGER},
      tasktitle = #{record.tasktitle,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ujiuye.usual.bean.Task" >
    update task
    <set >
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=DATE},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="funFk != null" >
        fun_fk = #{funFk,jdbcType=INTEGER},
      </if>
      <if test="empFk2 != null" >
        emp_fk2 = #{empFk2,jdbcType=INTEGER},
      </if>
      <if test="empFk != null" >
        emp_fk = #{empFk,jdbcType=INTEGER},
      </if>
      <if test="tasktitle != null" >
        tasktitle = #{tasktitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ujiuye.usual.bean.Task" >
    update task
    set starttime = #{starttime,jdbcType=DATE},
      endtime = #{endtime,jdbcType=DATE},
      level = #{level,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      fun_fk = #{funFk,jdbcType=INTEGER},
      emp_fk2 = #{empFk2,jdbcType=INTEGER},
      emp_fk = #{empFk,jdbcType=INTEGER},
      tasktitle = #{tasktitle,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="getEmpFkByEnameResultMap" type="com.ujiuye.usual.bean.Task">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="starttime" property="starttime" jdbcType="DATE" />
    <result column="endtime" property="endtime" jdbcType="DATE" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="fun_fk" property="funFk" jdbcType="INTEGER" />
    <result column="emp_fk2" property="employee1.ename" jdbcType="INTEGER" />
    <result column="emp_fk" property="employee.ename" jdbcType="INTEGER" />
    <result column="tasktitle" property="tasktitle" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>

  <select id="getEmpFkByEname" resultMap="getEmpFkByEnameResultMap">
    SELECT t.*
    FROM task t
    LEFT JOIN employee e
    ON t.`emp_fk2` = e.`eid`
    WHERE e.`ename` LIKE concat(concat('%',#{keyword}),'%')
  </select>

  <update id="updateStatus" parameterType="com.ujiuye.usual.bean.Task">
    update task set status = #{status} where id = #{id}
  </update>

  <resultMap id="getTaskByIdResultMap" type="com.ujiuye.usual.bean.Task">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="starttime" property="starttime" jdbcType="DATE" />
    <result column="endtime" property="endtime" jdbcType="DATE" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="fun_fk" property="funFk" jdbcType="INTEGER" />
    <result column="emp_fk2" property="empFk2" jdbcType="INTEGER" />
    <result column="emp_fk" property="empFk" jdbcType="INTEGER" />
    <result column="tasktitle" property="tasktitle" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <association property="function" javaType="com.ujiuye.pro.bean.Function">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="functionname" property="functionname" jdbcType="VARCHAR" />
      <result column="proname" property="proname" jdbcType="VARCHAR" />
      <result column="analysisname" property="analysisname" jdbcType="VARCHAR" />
      <result column="modele_fk" property="modeleFk" jdbcType="INTEGER" />
      <association property="project" javaType="com.ujiuye.pro.bean.Project">
        <id column="pid" property="pid" jdbcType="INTEGER" />
        <result column="pname" property="pname" jdbcType="VARCHAR" />
      </association>
      <association property="model" javaType="com.ujiuye.pro.bean.Model">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="modname" property="modname" jdbcType="VARCHAR" />
      </association>
      <association property="analysis" javaType="com.ujiuye.pro.bean.Analysis">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
      </association>
    </association>
    <association property="employee" select="com.ujiuye.sys.mapper.EmployeeMapper.getEmployeeByEid" column="emp_fk"></association>
    <association property="employee1" select="com.ujiuye.sys.mapper.EmployeeMapper.getEmployeeByEid" column="emp_fk2"></association>
  </resultMap>

  <select id="getTaskById" resultMap="getTaskByIdResultMap">
    SELECT t.`endtime`,p.`pname`,t.`id`,t.`level`,t.`remark`,t.`starttime`,t.`status`,t.`tasktitle`,t.`emp_fk`,t.`emp_fk2`,m.`modname`,a.`title`,f.`functionname`
    FROM task t
    LEFT JOIN `function` f
    ON t.`fun_fk` = f.`id`
    LEFT JOIN project p
    ON f.`proname` = p.`pid`
    LEFT JOIN `module` m
    ON f.`modele_fk` = m.`id`
    LEFT JOIN `analysis` a
    ON m.`analysis_fk` = a.`id`
    WHERE t.`id` = #{id}
  </select>
</mapper>